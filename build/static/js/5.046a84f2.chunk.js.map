{"version":3,"sources":["views/LoginView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["styles","label","display","flexDirection","marginBottom","container","width","margin","marginTop","title","button","initialState","email","password","LogInView","useState","state","setState","dispatch","useDispatch","handleChange","event","target","name","value","prevState","style","onSubmit","preventDefault","logIn","form","autoComplete","type","onChange","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"uPAKMA,EAAS,CACbC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAGhBC,UAAW,CACTC,MAAO,IACPC,OAAQ,SACRC,UAAW,IAGbC,MAAO,CACLL,aAAc,IAEhBM,OAAQ,CACNH,OAAQ,SACRL,QAAS,OACTM,UAAW,KAITG,EAAe,CACnBC,MAAO,GACPC,SAAU,IAGG,SAASC,IAAa,IAAD,EACRC,mBAASJ,GADD,mBAC3BK,EAD2B,KACpBC,EADoB,KAE5BC,EAAWC,cAEXC,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MACdP,GAAS,SAACQ,GAAD,mBAAC,eACLA,GADI,kBAENF,EAAOC,QAUZ,OACE,sBAAKE,MAAO1B,EAAOK,UAAnB,UACE,oBAAIqB,MAAO1B,EAAOS,MAAlB,yBAEA,uBAAMkB,SAVW,SAACN,GACpBA,EAAMO,iBACNV,EAASW,YAAMb,IACfC,EAAS,CAAEM,KAAM,GAAIX,MAAO,GAAIC,SAAU,MAOVa,MAAO1B,EAAO8B,KAAMC,aAAa,MAA/D,UACE,wBAAOL,MAAO1B,EAAOC,MAArB,kBAEE,uBACE+B,KAAK,QACLT,KAAK,QACLC,MAAOR,EAAMJ,MACbqB,SAAUb,OAId,wBAAOM,MAAO1B,EAAOC,MAArB,qBAEE,uBACE+B,KAAK,WACLT,KAAK,WACLC,MAAOR,EAAMH,SACboB,SAAUb,OAId,wBAAQM,MAAO1B,EAAOU,OAAQsB,KAAK,SAAnC,4B,8ECxEO,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGvB,QAETY,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/5.046a84f2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { logIn } from \"../redux/auth/auth-operations\";\r\n\r\nconst styles = {\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n\r\n  container: {\r\n    width: 320,\r\n    margin: \"0 auto\",\r\n    marginTop: 20,\r\n  },\r\n\r\n  title: {\r\n    marginBottom: 15,\r\n  },\r\n  button: {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    marginTop: 25,\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport default function LogInView() {\r\n  const [state, setState] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(logIn(state));\r\n    setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Log in page</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={state.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={state.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button style={styles.button} type=\"submit\">\r\n          Log in\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n//import { connect } from \"react-redux\";\r\n// class LoginView extends Component {\r\n//   state = {\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onLogIn(this.state);\r\n\r\n//     this.setState({ name: \"\", email: \"\", password: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     const { email, password } = this.state;\r\n\r\n//     return (\r\n//       <div style={styles.container}>\r\n//         <h1 style={styles.title}>Log in page</h1>\r\n\r\n//         <form\r\n//           onSubmit={this.handleSubmit}\r\n//           style={styles.form}\r\n//           autoComplete=\"off\"\r\n//         >\r\n//           <label style={styles.label}>\r\n//             Email\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={email}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <label style={styles.label}>\r\n//             Password\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <button style={styles.button} type=\"submit\">\r\n//             Log in\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogIn: logIn,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(LoginView);\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}