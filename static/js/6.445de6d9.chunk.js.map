{"version":3,"sources":["views/RegisterView.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","container","margin","marginTop","title","button","initialState","name","email","password","RegisterView","useState","state","setState","dispatch","useDispatch","handleChange","event","target","value","prevState","style","onSubmit","preventDefault","register","autoComplete","type","onChange","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"uPAKMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,IAEhBC,UAAW,CACTL,MAAO,IACPM,OAAQ,SACRC,UAAW,IAGbC,MAAO,CACLJ,aAAc,IAGhBK,OAAQ,CACNH,OAAQ,SACRJ,QAAS,OACTK,UAAW,KAITG,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,IAAe,MAwBXC,mBAASL,GAxBE,mBAwB9BM,EAxB8B,KAwBvBC,EAxBuB,KAyB/BC,EAAWC,cAEXC,EAAe,SAACC,GAAW,IAAD,EACNA,EAAMC,OAAtBX,EADsB,EACtBA,KAAMY,EADgB,EAChBA,MACdN,GAAS,SAACO,GAAD,mBAAC,eACLA,GADI,kBAENb,EAAOY,QASZ,OACE,sBAAKE,MAAO3B,EAAOO,UAAnB,UACE,oBAAIoB,MAAO3B,EAAOU,MAAlB,sBAEA,uBAAMkB,SATW,SAACL,GACpBA,EAAMM,iBACNT,EAASU,YAASZ,KAOcS,MAAO3B,EAAOC,KAAM8B,aAAa,MAA/D,UACE,wBAAOJ,MAAO3B,EAAOG,MAArB,iBAEE,uBACE6B,KAAK,OACLnB,KAAK,OACLY,MAAOP,EAAML,KACboB,SAAUX,OAId,wBAAOK,MAAO3B,EAAOG,MAArB,kBAEE,uBACE6B,KAAK,QACLnB,KAAK,QACLY,MAAOP,EAAMJ,MACbmB,SAAUX,OAId,wBAAOK,MAAO3B,EAAOG,MAArB,qBAEE,uBACE6B,KAAK,WACLnB,KAAK,WACLY,MAAOP,EAAMH,SACbkB,SAAUX,OAId,wBAAQK,MAAO3B,EAAOW,OAAQqB,KAAK,SAAnC,8B,8EC5GO,SAASE,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGtB,QAETW,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/6.445de6d9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../redux/auth/auth-operations\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n  container: {\r\n    width: 320,\r\n    margin: \"0 auto\",\r\n    marginTop: 20,\r\n  },\r\n\r\n  title: {\r\n    marginBottom: 15,\r\n  },\r\n\r\n  button: {\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    marginTop: 25,\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nexport default function RegisterView() {\r\n  // const [name, setName] = useState(\"\");\r\n  // const [email, setEmail] = useState(\"\");\r\n  // const [password, setPassword] = useState(\"\");\r\n  // const dispatch = useDispatch();\r\n\r\n  // const handleChange = (event) => {\r\n  //   const { name, value } = event.target;\r\n  //   switch (name) {\r\n  //     case \"name\":\r\n  //       setName(value);\r\n  //       break;\r\n  //     case \"email\":\r\n  //       setEmail(value);\r\n  //       break;\r\n\r\n  //     case \"password\":\r\n  //       setPassword(value);\r\n  //       break;\r\n  //     default:\r\n  //       console.warn(`Error`);\r\n  //   }\r\n  // };\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    dispatch(register(state));\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.title}>Register</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\r\n        <label style={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={state.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={state.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <button style={styles.button} type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import { connect } from \"react-redux\";\r\n//import { register } from \"../redux/auth/auth-operations\";\r\n//class RegisterView extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     this.props.onRegister(this.state);\r\n\r\n//     this.setState({ name: \"\", email: \"\", password: \"\" });\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, email, password } = this.state;\r\n\r\n//     return (\r\n//       <div style={styles.container}>\r\n//         <h1 style={styles.title}>Register</h1>\r\n\r\n//         <form\r\n//           onSubmit={this.handleSubmit}\r\n//           style={styles.form}\r\n//           autoComplete=\"off\"\r\n//         >\r\n//           <label style={styles.label}>\r\n//             Name\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={name}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <label style={styles.label}>\r\n//             Email\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={email}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <label style={styles.label}>\r\n//             Password\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n\r\n//           <button style={styles.button} type=\"submit\">\r\n//             Register\r\n//           </button>\r\n//         </form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onRegister: register,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(RegisterView);\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}